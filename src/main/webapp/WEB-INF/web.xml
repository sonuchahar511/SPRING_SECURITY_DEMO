<?xml version="1.0" encoding="UTF-8"?>

<!-- <web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
 -->
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://java.sun.com/xml/ns/javaee"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    id="WebApp_ID" version="2.5">
	
  <display-name>Archetype Created Web Application</display-name>
  <welcome-file-list>
        <welcome-file>/WEB-INF/pages/index.jsp</welcome-file>
   </welcome-file-list>
   
        <!-- Loads Spring Security config file -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/mvc-dispatcher-servlet.xml,
			/WEB-INF/config/persistence.xml,
			/WEB-INF/config/security.xml,
			/WEB-INF/config/security-service-spring.xml,
			/WEB-INF/config/security-spring.xml,
			/WEB-INF/config/service.xml
		</param-value>
	</context-param> 
    
  <!-- Spring MVC -->
	 <servlet>
		<servlet-name>mvc-dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>mvc-dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<error-page>
		<error-code>401</error-code>
		<location>/WEB-INF/pages/401_unauthorizedPage.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/pages/404_pageNotFoundPage.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/WEB-INF/pages/500_internalServerErrorPage.jsp</location>
	</error-page>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- Adding the listener to web.xml causes an ApplicationEvent to be published to the Spring ApplicationContext every time a HttpSession commences or terminates.
	 This is critical, as it allows the SessionRegistryImpl to be notified when a session ends.
	 Without it, a user will never be able to log back in again once they have exceeded their session allowance, even if they log out of another session or it times out. -->
	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>

	<!-- Spring Security -->
	 <filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param> 
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> 
	
	 <session-config>
      <!-- in minutes -->
    	  <session-timeout>1</session-timeout>
  	 </session-config>
	
</web-app>
